.tile-skills#skills
  -var currentYear = new Date().getFullYear()
  h2 Skills
  h3 Programming
  p
    | I begin writing code about #{Math.round((age-8.5) * 10) / 10} years ago (but
    | that isn't a useful measure of experience). From dumb to <del>smart</del> not
    | dumb, I have experienced with some major programming styles and practices - I
    | know how to organize, version and publish my code <b>properly</b>. I understand
    | the concept of <b>unit testing</b> and 
    a(href='https://travis-ci.org/micromaomao') had done it
    |  for a few of my projects. I will (<i>eventually</i>) try to write test for
    | every project I have published on GitHub, but I currently don't have that much
    | time.
  h4
    del Why you probably don't want to <i>hire</i> me:
  p
    | I will admit that I haven't experienced with any "high-end" technologies such
    | as machine learning or data analysis. All I can do is just code things. There
    | isn't any application of neural network or higher math or whatnot in any of my
    | projects so far. I will try to learn these, but my progress is slow.
  p
    | Also, I'm (currently) weak on algorithm, data structures and <i>"problem
    | solving skills"</i> and I struggles to efficiently solve those interview
    | problems.
  p
    | In addition, I'm not best at writing <i>human-readable</i> and comprehensible
    | code. Sometimes my code don't even make sense to me quickly. ( BTW I don't
    | seems to have problems reading others' code. )
  h4 Specific skills
  .skilltags
    ul
      mixin skill_li(name, exp)
        li
          span.name!= name
          span.name-trig-bg
            span.name-trig &nbsp;
          span.exp!= exp
          span.exp-trig-bg
            span.exp-trig &nbsp;
          div.desc
            block
      +skill_li("Web (front-end)", "<i>Maybe near</i> expert?")
        p
          | I have <i>around</i> #{currentYear - 2012} years of experience with 
          a(href="https://developer.mozilla.org/en-US/") web technology
          |  ( also actual <i>technology</i> like 
          | <b><del>WebGL</del></b> 
          a(href="http://threejs.org/examples/#webgl_geometry_cube") three.js
          | ). I can build pretty much any UI with web stuff.
          | I truly think that building for the web is the most efficient way to start the first version of your App.
          | That is what "Web App" or "<b>Progressive Web App</b>" is for.
        p
          | I have experience with 
          a(href="https://facebook.github.io/react/") <b>React</b>
          | , but I haven't used many framework. React is a great concept because it focus on the state
          | of an UI component, which ( when used with 
          a(href='http://redux.js.org/') <b>Redux</b>
          |  to share state across the entire App ) often improve consistency of the UI. I have built a decent <b>Progressive Web App</b> 
          a(href='https://beta.schsrch.xyz') SchSrch
          | . I used <b>Webpack</b> to handle assets and generate <b>ServiceWorker</b>.
          | I have tried my best to <b>optimize</b> the performance and approach a <b>60fps</b> UI.
      +skill_li("Web (back-end)", "<i>I know how to do it</i> kinds of experience.")
        p
          | I have experience with 
          a(href="https://nodejs.org") <b>Node.js</b>
          |  and had build some website with it ( including this one ), with the 
          a(href="https://expressjs.com/") <b>Express.js</b>
          |  framework. I also used <b>template engine</b> like 
          a(href="https://github.com/pugjs/pug") Pug
          |  (aka. Jade) to help generating HTML and 
          a(href="http://sass-lang.com/") <b>Sass</b>
          |  to write "concise" CSS. I like Pug and Sass because the syntax is way cleaner than HTML and CSS itself.
      +skill_li("Web (cross-platform desktop)", "Write decent desktop application with things used for the Web.")
        p
          | I like being able to use Web technology with building desktop applications
          | (any platform actually - it should try to run on both desktop, tablets and phones),
          |  and I have managed to build 
          a(href='https://github.com/micromaomao/Shanbay-Desktop') a useful desktop app
          |  with 
          a(href="http://electron.atom.io/") Electron
          | . I will try building a Progressive Web App for desktop that works with Chrome 
          a(href='http://caniuse.com/#feat=web-app-manifest') (and perhaps Firefox, certainly not IE and Safari)
          | .
          | I know there're some downsides with building desktop Apps with HTML/CSS, like
          | for Electron the resulting app package will be pretty big ( over 40 MB after
          | compressed ), unfortunately 
          a(href='http://caniuse.com/#feat=web-app-manifest') the supports for proper Web App are mostly chrome-only
          | .
      +skill_li("Linux", "Experience of breaking and fixing things.")
        p
          | I've used Linux for:
        mixin linuxprompt(hat, dir)
          -let [user, host] = hat.split('@')
          | ╭─
          span(style="color: #899e19;") #{user}
          span(style="color: #31a69f;") @
          span(style="color: #899e19;") #{host}
          |  #{dir}
          br
          | ╰─➤ 
        pre.linuxpre
          +linuxprompt("linux@MaoWtm", "~")
          span(style="color: #899e19;") uptime
          br
          -var nowTimeString = new Date().toTimeString().match(/\d{1,2}:\d\d:\d\d/)[0]
          |  #{nowTimeString} up 
          |  #{Math.ceil((new Date().getTime() - new Date("2014-02-01 00:00:00 GMT+0800").getTime()) / (24*60*60*1000))}
          |  days,
          |  #{nowTimeString.replace(/:\d\d$/g, "")},
          | &nbsp;#{Math.ceil(Math.random() * 100)}
          |  user,  load average:
          |  #{Math.floor(Math.random() * 100) / 100}, 0, 0
          br
          +linuxprompt("linux@MaoWtm", "~")
        p
          | I can use zsh on Linux reasonably well to do some non-trivial system
          | <i>maintaining</i> ( including breaking the system ). Thanks to 
          a(href="https://www.archlinux.org/") Arch Linux
          | , I've managed to <b>understand</b>, not very deep, how Linux ( and those
          | fundamental application that almost every distro include, from "systemd",
          | "initramfs" to "ip" or "dig" ) briefly work and how to make use of them. I use
          | Linux as my desktop OS. Linux and some command line tools helped me a lot, not
          | only for coding.
        p
          | I think Linux is the most suitable and useful OS for most programmers. It is
          | highly customizable and it relies on less "magic" than Windows. There are many
          | handy tools that does almost anything from Base64 to easy encryption with GPG
          | or OpenSSL, or video conversion with FFmpeg, available for use from the command
          | line. Shell script made simple maintaining tasks quick and easy. I agree that
          | Windows Server is obviously not a good idea.
      +skill_li("C / C++", "Can write simple things.")
        p
          | I know how to write C++ programs, but it <b>often takes much longer</b> and the products probably are <b>buggy</b> and only run on Linux.
          | I can write a C++ version of most JavaScript/Python program I have wrote. It just takes more time and introduces more bugs.
      +skill_li('Android', "Basic App development skills")
        p
          | I understand some concepts in building Android Apps, but haven't built much projects yet.
  p.btn
    | There are more things I've tried, but not experienced enough to put it here. However,
    | I (feel like) can learn new stuff easily, and I'm actively 
    a(href="#learning") learning new things
    | .
